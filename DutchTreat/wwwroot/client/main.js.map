{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/checkout.component.ts","./src/app/pages/checkout.component.html","./src/app/pages/shopPage.component.ts","./src/app/pages/shopPage.component.html","./src/app/router/index.ts","./src/app/services/store.service.ts","./src/app/shared/Order.ts","./src/app/shared/dataService.ts","./src/app/views/cartView.component.ts","./src/app/views/cartView.component.html","./src/app/views/productListView.component.ts","./src/app/views/productListView.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl:\"app.component.html\" ,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n  ","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <h3>{{title}}</h3>\r\n    <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { Checkout } from './pages/checkout.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductListView,\r\n        CartView,\r\n        ShopPage,\r\n        Checkout\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      router\r\n  ],\r\n    providers: [\r\n        Store\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService) {\n  }\n \n\n  onCheckout() {\n    // TODO\n    alert(\"Doing checkout\");\n  }\n}","<h2>checkout.component.html</h2>\n<div class=\"row\">\n  <h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of data?.order?.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice|currency:'USD':true }}</td>\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-condensed\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>\n        <td class=\"text-right\">{{ data.order?.subtotal|currency:'USD':true }}</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>\n        <td class=\"text-right\">{{ data.order?.subtotal|currency:'USD':true }}</td>\n      </tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"shop-page\",\r\n    templateUrl:\"shopPage.component.html\"\r\n})\r\n\r\nexport class ShopPage { }","<h2>shopPage.component.html</h2>\r\n<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <!--<h3>{{title}}</h3>-->\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>","import { RouterModule } from \"@angular/router\";\r\nimport { Checkout } from \"../pages/checkout.component\";\r\nimport { ShopPage } from \"../pages/shopPage.component\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: ShopPage },\r\n    { path: \"checkout\", component: Checkout }\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, {\r\n    useHash:false\r\n});\r\n\r\nexport default router;","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\nimport { Product } from \"../shared/Product\";\r\n\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n\r\n    public products: Product[] = [];\r\n\r\n    public order: Order = new Order();\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<Product[]>(\"/api/products\")\r\n            .pipe(map(data => { this.products = data }));\r\n    }\r\n\r\n    addToOrder(product: Product) {\r\n\r\n        let possibleItem = this.order.items.find(o => o.productArtId === product.artId);\r\n\r\n        if (possibleItem !== undefined && possibleItem.quantity !== undefined) {\r\n            possibleItem.quantity++;\r\n        }\r\n        else\r\n        {\r\n            let item = new OrderItem();\r\n            \r\n            item.productId = product.id;\r\n            item.productTitle = product.title;\r\n            item.productArtId = product.artId;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","export class Order {\r\n    orderId!: number;\r\n    orderDate: Date = new Date();\r\n    ordernumber!: string;\r\n    items: OrderItem[] = new Array(new OrderItem());\r\n\r\n    get subtotal(): number {\r\n\r\n        const result = this.items.reduce(\r\n            (tot, val) => {\r\n                if (val.unitPrice !== undefined && val.quantity !== undefined)\r\n                    return tot + (val.unitPrice * val.quantity);\r\n                else {\r\n                    return 0;\r\n                }\r\n            }, 0);\r\n        return result;\r\n    }\r\n}\r\n\r\n//export class OrderItem {\r\n//    id: number = -1;\r\n//    quantity: number = -1;\r\n//    unitPrice: number = -1;\r\n//    productId: number = -1;\r\n//    productCategory: string = \"\";\r\n//    productSize: string = \"\";\r\n//    productTitle: string = \"\";\r\n//    productArtist: string = \"\";\r\n//    productArtId: string = \"\";\r\n//}\r\n\r\nexport class OrderItem {\r\n    id?: number;\r\n    quantity: number = 0;\r\n    unitPrice: number = 0;\r\n    productId?: number;\r\n    productCategory?: string;\r\n    productSize?: string;\r\n    productTitle?: string;\r\n    productArtist?: string;\r\n    productArtId?: string;\r\n}\r\n\r\n\r\n","import { Order, OrderItem } from \"./Order\";\r\n\r\nexport class DataService {\r\n    order?: Order;\r\n    \r\n}","import { Component } from '@angular/core'\r\nimport { Store } from '../services/store.service';\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls: [\"cartView.component.css\"]\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n\r\n}","<h3>Cart</h3>\r\n<div>Count: {{store.order.items.length}}</div>\r\n<table class=\"table table-condensed table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of store?.order?.items\">\r\n            <td>\r\n                <img src=\"/img/{{item?.productArtId}}.jpg\" alt=\"{{item?.productArtist}}\" class=\"img-fluid product-thumb\" />\r\n            </td>\r\n            <td>{{item?.productCategory}}</td>\r\n            <td>{{item?.quantity}}</td>\r\n            <td>{{item?.unitPrice | currency}}</td>\r\n            <!--<td *ngIf=\"item?.unitPrice !== undefined && item?.quantity !== undefined\">{{item?.unitPrice * item?.quantity | currency}}</td>-->\r\n        </tr>\r\n    </tbody> \r\n    <tfoot>\r\n        <tr>\r\n            \r\n            <td colspan=\"5\"><strong>Subtotal: {{store?.order?.subtotal | currency}}</strong></td>\r\n        </tr>\r\n    </tfoot>\r\n</table>\r\n<a class=\"btn btn-success\" *ngIf=\"store.order.items.length > 0\" routreLink=\"checkout\">Checkout</a>\r\n<hr />\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector:\"product-list\",\r\n    templateUrl: \"productListView.component.html\",\r\n    styleUrls: [\"productListView.component.css\"]\r\n})\r\nexport default class ProductListView implements OnInit {\r\n\r\n    \r\n\r\n    constructor(public store: Store) {\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(() => { });//<- Executes the operation\r\n    }\r\n}","<div class=\"row\">\r\n\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid product-image\" alt=\"{{p.title}}\" />\r\n            <h5>{{p.category}} - {{p.size}}</h5>\r\n            <ul class=\"products-props\">\r\n                <li>Price: {{p.price | currency}}</li>\r\n                <li>Artist: {{p.artist}}</li>\r\n                <li>Title: {{p.title}}</li>\r\n                <li>Description: {{p.artDescription}}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\" (click)=\"store.addToOrder(p)\" >Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n "],"names":[],"sourceRoot":"webpack:///"}